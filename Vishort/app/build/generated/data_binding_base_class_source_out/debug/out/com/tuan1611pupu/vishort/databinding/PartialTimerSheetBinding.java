// Generated by view binder compiler. Do not edit!
package com.tuan1611pupu.vishort.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.slider.Slider;
import com.tuan1611pupu.vishort.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PartialTimerSheetBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnClose;

  @NonNull
  public final ImageView btnDone;

  @NonNull
  public final TextView maximum;

  @NonNull
  public final Slider selection;

  @NonNull
  public final RelativeLayout timerSheet;

  private PartialTimerSheetBinding(@NonNull RelativeLayout rootView, @NonNull ImageView btnClose,
      @NonNull ImageView btnDone, @NonNull TextView maximum, @NonNull Slider selection,
      @NonNull RelativeLayout timerSheet) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnDone = btnDone;
    this.maximum = maximum;
    this.selection = selection;
    this.timerSheet = timerSheet;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PartialTimerSheetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PartialTimerSheetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.partial_timer_sheet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PartialTimerSheetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClose;
      ImageView btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btnDone;
      ImageView btnDone = ViewBindings.findChildViewById(rootView, id);
      if (btnDone == null) {
        break missingId;
      }

      id = R.id.maximum;
      TextView maximum = ViewBindings.findChildViewById(rootView, id);
      if (maximum == null) {
        break missingId;
      }

      id = R.id.selection;
      Slider selection = ViewBindings.findChildViewById(rootView, id);
      if (selection == null) {
        break missingId;
      }

      RelativeLayout timerSheet = (RelativeLayout) rootView;

      return new PartialTimerSheetBinding((RelativeLayout) rootView, btnClose, btnDone, maximum,
          selection, timerSheet);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
